package com.ctp.dao;

import java.util.Set;

import org.springframework.data.redis.core.RedisTemplate;

import com.ctp.data.OHLCDataItem;
import com.itqy8.ctp.enums.TimeUnits;

public class OHLCDataDaoImpl implements OHLCDataDao{

	private RedisTemplate<String, OHLCDataItem> redisTemplate;
	
	private static final String OHLC_DATA_KEY = "ohlc_data_key_";

	public void setRedisTemplate(RedisTemplate<String, OHLCDataItem> redisTemplate) {
		this.redisTemplate = redisTemplate;
	}
	
	private String getKey(String instrumentId,TimeUnits timeUnits){
		return OHLC_DATA_KEY+instrumentId+"_"+timeUnits.getDesc();
	}
	
	@Override
	public void addToZSet(String instrumentId,TimeUnits timeUnits, OHLCDataItem data) {
		redisTemplate.opsForZSet().add(this.getKey(instrumentId, timeUnits), data, data.getPriceTime());
	}
	
	
	@Override
	public Set<OHLCDataItem> getList(String instrumentId,TimeUnits timeUnits, long start, long end) {
		return redisTemplate.opsForZSet().rangeByScore(this.getKey(instrumentId, timeUnits), start, end);
	}

	@Override
	public Set<OHLCDataItem> getList(String instrumentId,TimeUnits timeUnits, long start, long end, int count) {
		return redisTemplate.opsForZSet().rangeByScore(this.getKey(instrumentId, timeUnits), start, end, 0, count);
	}

	@Override
	public OHLCDataItem getOHLCDataItemByScore(String instrumentId,TimeUnits timeUnits,long score) {
		return redisTemplate.opsForZSet().rangeByScore(this.getKey(instrumentId, timeUnits), score, score).iterator().next();
	}

}
