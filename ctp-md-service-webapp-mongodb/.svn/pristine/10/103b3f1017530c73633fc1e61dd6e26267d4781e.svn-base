package com.ctp.strategy;

import eu.verdelhan.ta4j.Order.OrderType;
import eu.verdelhan.ta4j.Rule;
import eu.verdelhan.ta4j.Strategy;
import eu.verdelhan.ta4j.TimeSeries;
import eu.verdelhan.ta4j.TradingRecord;
import eu.verdelhan.ta4j.indicators.simple.ClosePriceIndicator;
import eu.verdelhan.ta4j.indicators.trackers.SMAIndicator;
import eu.verdelhan.ta4j.trading.rules.CrossedDownIndicatorRule;
import eu.verdelhan.ta4j.trading.rules.CrossedUpIndicatorRule;
import eu.verdelhan.ta4j.trading.rules.WaitForRule;

public class MAStrategy {
	
	public static Strategy buildStrategy(TimeSeries series) {
		if (series == null) {
			throw new IllegalArgumentException("Series cannot be null");
		}
		ClosePriceIndicator closePrice = new ClosePriceIndicator(series);
		SMAIndicator shortSma = new SMAIndicator(closePrice, 20);
		SMAIndicator longSma = new SMAIndicator(closePrice, 185);
		Rule buyingRule = new CrossedUpIndicatorRule(shortSma, longSma).and(new WaitForRule(OrderType.BUY,40)).and(new WaitForRule(OrderType.SELL,40));
		
		Rule sellingRule = new CrossedDownIndicatorRule(shortSma, longSma).and(new WaitForRule(OrderType.BUY,40)).and(new WaitForRule(OrderType.SELL,40));
		
		return new Strategy(buyingRule, sellingRule);
	}
}
